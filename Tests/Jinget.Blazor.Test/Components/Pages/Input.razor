@page "/input"
@using Jinget.Blazor.Components.Input
@using Jinget.Blazor.Components.Popup
@using MudBlazor
<JingetMessageBox @ref=@messageBox
                  Rtl="false"
                  ShowVerboseFuncAsync=@(async ()=>await Task.FromResult<bool>(true))></JingetMessageBox>
<div class="container">
    text:
    <div class="row">
        <div class="form-group input-group">
            <JingetInput Id="inpText"
                         InputType="InputType.Text"
                         @bind-Value="@obj.Name">
            </JingetInput>


            <MudButton FullWidth=true
                       OnClick="submitText"
                       Variant="Variant.Filled"
                       Color="Color.Primary">
                <MudText>Submit</MudText>
            </MudButton>
        </div>
    </div>
    password:
    <div class="row">
        <div class="form-group input-group">
            <JingetInput Id="inpPassword"
                         InputType="MudBlazor.InputType.Password"
                         @bind-Value="@password_val">
            </JingetInput>
            <MudButton FullWidth=true
                       OnClick="submitPassword"
                       Variant="Variant.Filled"
                       Color="Color.Primary">
                <MudText>Submit</MudText>
            </MudButton>
        </div>
    </div>
    number:
    <div class="row">
        
        <div class="form-group input-group">
            <JingetInput Id="inpNumber"
                         InputType="MudBlazor.InputType.Number"
                         @bind-Value="@number_val">
            </JingetInput>
            <MudButton FullWidth=true
                       OnClick="submitNumber"
                       Variant="Variant.Filled"
                       Color="Color.Primary">
                <MudText>Submit</MudText>
            </MudButton>
        </div>
    </div>
    <hr />
    complete example:
    <div class="row">
        <div class="form-group input-group">
            <JingetInput Id="inpNumber"
                         InputType="MudBlazor.InputType.Number"
                         DisplayName="Sample Input"
                         HelperText="Enter your desired value"
                         Rows="3"
                         @bind-Value="@complete_val"
                         OnChange="OnTextChanged">
                @*  *@
            </JingetInput>
            <MudButton FullWidth=true
                       OnClick="submitComplete"
                       Variant="Variant.Filled"
                       Color="Color.Primary">
                <MudText>Submit</MudText>
            </MudButton>
            <MudButton FullWidth=true
                       OnClick="setValue"
                       Variant="Variant.Filled"
                       Color="Color.Primary">
                <MudText>Set Value</MudText>
            </MudButton>
        </div>
    </div>
</div>

@code {

    JingetMessageBox? messageBox;

    object? complete_val;
    object? input_val;
    object? password_val;
    object? number_val;

    public class Test
    {
        public object? Name { get; set; }
    }
    Test obj;
    protected override Task OnInitializedAsync()
    {
        obj = new();
        return base.OnInitializedAsync();
    }
    async Task submitText()
    {
        await messageBox.ShowInfoAsync("Text input", "You entered:", Newtonsoft.Json.JsonConvert.SerializeObject(obj.Name));
    }
    async Task submitPassword()
    {
        await messageBox.ShowInfoAsync("Text input", "You entered:", Newtonsoft.Json.JsonConvert.SerializeObject(password_val));
    }
    async Task submitNumber()
    {
        await messageBox.ShowInfoAsync("Text input", "You entered:", Newtonsoft.Json.JsonConvert.SerializeObject(number_val));
    }
    async Task submitComplete()
    {
        await messageBox.ShowInfoAsync("Text input", "You entered:", Newtonsoft.Json.JsonConvert.SerializeObject(complete_val));
    }
    async Task setValue()
    {
        complete_val = "This is auto set";
    }
    async Task OnTextChanged(ChangeEventArgs e) => await messageBox.ShowInfoAsync("Text input", "You entered:", Newtonsoft.Json.JsonConvert.SerializeObject(e));
}