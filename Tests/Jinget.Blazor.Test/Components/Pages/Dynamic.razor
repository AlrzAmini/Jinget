@page "/dynamic"
@using Jinget.Blazor.Components.DynamicComponent
@using Jinget.Blazor.Components.Table
@using Jinget.Blazor.Components.Popup
@using Jinget.Blazor.Models
@using Jinget.Blazor.Services
@using Jinget.Blazor.Attributes
@using Jinget.Blazor.Attributes.Input
@using Jinget.Blazor.Attributes.Picker
@using MudBlazor;
@using Jinget.Core.Enumerations;
@using Jinget.Core.ExtensionMethods.Collections;
<JingetMessageBox @ref=@messageBox ShowVerboseFunc=@(()=>true) Rtl=true></JingetMessageBox>

<JingetDynamicForm Model=@Model Rtl=true></JingetDynamicForm>

<MudButton FullWidth=true
                   OnClick="Submit"
                   Variant="Variant.Filled"
                   Color="Color.Primary">
            <MudText>Submit</MudText>
        </MudButton>
        
@code {
    JingetMessageBox messageBox;
    public SampleModel Model { get; set; }

    protected override void OnInitialized()
    {
        Model = new();
    }

    async Task Submit()
    {
        await messageBox.ShowInfoAsync(
        Model.Name, 
        $"{Model.Name} {Model.LastName}",
        Newtonsoft.Json.JsonConvert.SerializeObject(Model));
    }

    public record SampleModel
    {
        public SampleModel()
        {

        }
        public SampleModel(IServiceProvider serviceProvider)
        {

        }
        [JingetTextBox(DisplayName = "نام", HelperText = "نام خود را منطبق با اطلاعات کارت ملی وارد نمایید", Order =1)]
        public string Name { get; set; }

        [JingetTextBox(DisplayName = "نام خانوادگی", HelperText = "نام خانوادگی خود را منطبق با اطلاعات کارت ملی وارد نمایید", Order =2)]
        public string LastName { get; init; }

        [JingetPasswordBox(DisplayName = "رمز عبور", Order =3)]
        public string Password { get; init; }

        [JingetEmailBox(DisplayName = "پست الکترونیکی",Order =4)]
        public string EMail { get; init; }

        [JingetJalaliDatePicker(DisplayName = "تاریخ تولد",Culture ="fa-IR", Order =5)]
        public string DoB { get; init; }

        [JingetJalaliDateRangePicker(DisplayName = "بازه زمانی سفر",Culture ="fa-IR", Order =6)]
        public DateRange TravelDate { get; init; }

        [JingetLabel(DisplayName = "امتیاز اکتسابی", HasLabel = false)]
        public int Score { get; init; } = 1850;

        [JingetTextArea(DisplayName = "اطلاعات بیشتر", Rows =3)]
        public string Description { get; init; }

        [JingetNumberBox(DisplayName = "سن", Order =7)]
        public int Age { get; set; }

        [JingetComboBox(DisplayName = "وضعیت", BindingFunction = nameof(GetStatusAsync), 
        Searchable =true,DefaultText ="---انتخاب کنید---",HasLabel =true, LabelCssClass = "overlayed-label", Order =8)]
        public int? Status { get; init; }
        public async Task<List<DropDownItemModel>> GetStatusAsync()
            => await new JingetComboBox().BindAsync<StatusModel>(async () =>
            {
                return await Task.FromResult(new List<StatusModel>
                                        {
                        new StatusModel{Code= 1,Title= "فعال" },
                        new StatusModel{Code= 2,Title= "غیرفعال" },
                        new StatusModel{Code= 3,Title= "نامشخص" }
                                        });
            });


        class StatusModel : BaseTypeModel
        {

        }

    }

}