name:  JingetExtensionsCI

on:
 # workflow_run:
#    workflows: ["CodeQL"]
#    types: 
#      - completed
  push:
    branches: [ main ]
  #  paths: 
 #     - '!**/*.md'
  #    - '!.github/*'
#  pull_request:
#    branches: main
 #   paths-ignore: 
 #     - '!**/*.md'
 #     - '!.github/*'
  
jobs:
  build:
    #if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    steps:
    #- name: Set Version Number
     # id: VersionNumber
      #run: echo "::set-output name=versionNumber::$(date +'%Y.%m.%d').${{github.run_number}}"
   
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
  
    #- name: Calculate next version
     # uses: paulhatch/semantic-version@v4.0.2
      #with:
       # major-pattern: '^(?i)Major Change:\b'
        #minor-pattern: '^(?i)New Feature:\b'
        #format: "${major}.${minor}.${patch}-prerelease${increment}"
        #bump_each_commit: false
    - name: Git Version
      uses: codacy/git-version@2.2.0
      with:
         major-identifier: '/^(?i)Breaking:\b/'
         minor-identifier: '/^(?i)Feature:\b/'
         
    - name: echo verison1
      run: echo "${{ env.Version }}"
  
  #  - name: Restore dependencies
 #    run: dotnet restore

 #   - name: Build
  #    run: dotnet build --no-restore --configuration Release
 #   - name: Test
  #    run: dotnet test --no-build --configuration Release --verbosity normal
      
 #  - name: Pack
  #    #run: dotnet pack --configuration Release /p:Version=${{steps.VersionNumber.outputs.versionNumber}} --no-build --output ./artifacts
   #   run: dotnet pack --configuration Release /p:Version=${{ env.Version }} --no-build --output ./artifacts
  #  - name: Push
  #    run: dotnet nuget push ./artifacts/**.nupkg --api-key ${{ secrets.Nuget_GitHub_Api_Key }} --source nuget.org
